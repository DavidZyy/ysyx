// Generated by CIRCT firtool-1.43.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module Csr(	// <stdin>:2374:10
  input         clock,	// <stdin>:2375:11
                reset,	// <stdin>:2376:11
  input  [2:0]  io_in_op,	// src/main/scala/rv32e/fu/csr.scala:27:14
  input  [31:0] io_in_cur_pc,	// src/main/scala/rv32e/fu/csr.scala:27:14
                io_in_csr_id,	// src/main/scala/rv32e/fu/csr.scala:27:14
                io_in_wdata,	// src/main/scala/rv32e/fu/csr.scala:27:14
  output        io_out_csr_br,	// src/main/scala/rv32e/fu/csr.scala:27:14
  output [31:0] io_out_csr_addr,	// src/main/scala/rv32e/fu/csr.scala:27:14
                io_out_r_csr,	// src/main/scala/rv32e/fu/csr.scala:27:14
                io_out_difftest_mcause,	// src/main/scala/rv32e/fu/csr.scala:27:14
                io_out_difftest_mepc,	// src/main/scala/rv32e/fu/csr.scala:27:14
                io_out_difftest_mstatus,	// src/main/scala/rv32e/fu/csr.scala:27:14
                io_out_difftest_mtvec	// src/main/scala/rv32e/fu/csr.scala:27:14
);

  reg  [31:0] reg_mepc;	// src/main/scala/rv32e/fu/csr.scala:32:28
  reg  [31:0] reg_mcause;	// src/main/scala/rv32e/fu/csr.scala:33:28
  reg  [31:0] reg_mstatus;	// src/main/scala/rv32e/fu/csr.scala:34:28
  reg  [31:0] reg_mtvec;	// src/main/scala/rv32e/fu/csr.scala:35:28
  wire        _GEN = io_in_csr_id == 32'h342;	// src/main/scala/chisel3/util/Mux.scala:77:13
  wire        _GEN_0 = io_in_op == 3'h1;	// <stdin>:2374:10, src/main/scala/chisel3/util/Mux.scala:77:13
  wire        _GEN_1 = io_in_csr_id == 32'h341;	// src/main/scala/chisel3/util/Mux.scala:77:13
  wire        _GEN_2 = io_in_csr_id == 32'h300;	// src/main/scala/chisel3/util/Mux.scala:77:13
  wire        _GEN_3 = io_in_op == 3'h2;	// src/main/scala/chisel3/util/Mux.scala:77:13
  wire        _GEN_4 = io_in_csr_id == 32'h305;	// src/main/scala/chisel3/util/Mux.scala:77:13
  always @(posedge clock) begin	// <stdin>:2375:11
    if (reset) begin	// <stdin>:2375:11
      reg_mepc <= 32'h0;	// src/main/scala/rv32e/fu/csr.scala:32:28
      reg_mcause <= 32'h0;	// src/main/scala/rv32e/fu/csr.scala:32:28, :33:28
      reg_mstatus <= 32'h0;	// src/main/scala/rv32e/fu/csr.scala:32:28, :34:28
      reg_mtvec <= 32'h0;	// src/main/scala/rv32e/fu/csr.scala:32:28, :35:28
    end
    else if (io_in_op == 3'h4) begin	// <stdin>:2374:10, src/main/scala/chisel3/util/Mux.scala:77:13
      reg_mepc <= {32{_GEN_1}} & io_in_wdata | reg_mepc;	// src/main/scala/chisel3/util/Mux.scala:77:13, src/main/scala/rv32e/fu/csr.scala:32:28
      reg_mcause <= {32{_GEN}} & io_in_wdata | reg_mcause;	// src/main/scala/chisel3/util/Mux.scala:77:13, src/main/scala/rv32e/fu/csr.scala:33:28
      reg_mstatus <= {32{_GEN_2}} & io_in_wdata | reg_mstatus;	// src/main/scala/chisel3/util/Mux.scala:77:13, src/main/scala/rv32e/fu/csr.scala:34:28
      reg_mtvec <= {32{_GEN_4}} & io_in_wdata | reg_mtvec;	// src/main/scala/chisel3/util/Mux.scala:77:13, src/main/scala/rv32e/fu/csr.scala:35:28
    end
    else begin	// src/main/scala/chisel3/util/Mux.scala:77:13
      automatic logic _GEN_5 = io_in_op == 3'h3;	// src/main/scala/chisel3/util/Mux.scala:77:13
      if (_GEN_5) begin	// src/main/scala/chisel3/util/Mux.scala:77:13
        if (_GEN_1)	// src/main/scala/chisel3/util/Mux.scala:77:13
          reg_mepc <= io_in_wdata;	// src/main/scala/rv32e/fu/csr.scala:32:28
        if (_GEN)	// src/main/scala/chisel3/util/Mux.scala:77:13
          reg_mcause <= io_in_wdata;	// src/main/scala/rv32e/fu/csr.scala:33:28
        if (_GEN_2)	// src/main/scala/chisel3/util/Mux.scala:77:13
          reg_mstatus <= io_in_wdata;	// src/main/scala/rv32e/fu/csr.scala:34:28
      end
      else begin	// src/main/scala/chisel3/util/Mux.scala:77:13
        if (_GEN_0) begin	// src/main/scala/chisel3/util/Mux.scala:77:13
          reg_mepc <= io_in_cur_pc;	// src/main/scala/rv32e/fu/csr.scala:32:28
          reg_mcause <= 32'hB;	// src/main/scala/chisel3/util/Mux.scala:77:13, src/main/scala/rv32e/fu/csr.scala:33:28
        end
        if (_GEN_3)	// src/main/scala/chisel3/util/Mux.scala:77:13
          reg_mstatus <=
            {1'h0,
             reg_mstatus[31:13],
             1'h0,
             reg_mstatus[10:8],
             1'h1,
             reg_mstatus[6:4],
             reg_mstatus[7],
             reg_mstatus[2:0]};	// src/main/scala/chisel3/util/Mux.scala:77:13, src/main/scala/rv32e/fu/csr.scala:34:28, :78:{35,48}, :80:48, :82:48, :84:48, :90:49
        else if (_GEN_0)	// src/main/scala/chisel3/util/Mux.scala:77:13
          reg_mstatus <=
            {reg_mstatus[31:13],
             2'h3,
             reg_mstatus[10:8],
             reg_mstatus[3],
             reg_mstatus[6:4],
             1'h0,
             reg_mstatus[2:0]};	// <stdin>:2374:10, src/main/scala/rv32e/fu/csr.scala:34:28, :78:{35,48}, :80:48, :81:48, :82:48, :84:48
      end
      if (_GEN_5 & _GEN_4)	// src/main/scala/chisel3/util/Mux.scala:77:13
        reg_mtvec <= io_in_wdata;	// src/main/scala/rv32e/fu/csr.scala:35:28
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// <stdin>:2374:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:2374:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:2374:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:2374:10
      automatic logic [31:0] _RANDOM[0:3];	// <stdin>:2374:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:2374:10
        `INIT_RANDOM_PROLOG_	// <stdin>:2374:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:2374:10
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;	// <stdin>:2374:10
        end	// <stdin>:2374:10
        reg_mepc = _RANDOM[2'h0];	// <stdin>:2374:10, src/main/scala/rv32e/fu/csr.scala:32:28
        reg_mcause = _RANDOM[2'h1];	// <stdin>:2374:10, src/main/scala/rv32e/fu/csr.scala:33:28
        reg_mstatus = _RANDOM[2'h2];	// <stdin>:2374:10, src/main/scala/rv32e/fu/csr.scala:34:28
        reg_mtvec = _RANDOM[2'h3];	// <stdin>:2374:10, src/main/scala/rv32e/fu/csr.scala:35:28
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:2374:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:2374:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_out_csr_br = _GEN_3 | _GEN_0;	// <stdin>:2374:10, src/main/scala/chisel3/util/Mux.scala:77:13
  assign io_out_csr_addr = _GEN_3 ? reg_mepc : _GEN_0 ? reg_mtvec : 32'h0;	// <stdin>:2374:10, src/main/scala/chisel3/util/Mux.scala:77:13, src/main/scala/rv32e/fu/csr.scala:32:28, :35:28
  assign io_out_r_csr =
    _GEN_2
      ? reg_mstatus
      : _GEN ? reg_mcause : _GEN_1 ? reg_mepc : _GEN_4 ? reg_mtvec : 32'h0;	// <stdin>:2374:10, src/main/scala/chisel3/util/Mux.scala:77:13, src/main/scala/rv32e/fu/csr.scala:32:28, :33:28, :34:28, :35:28
  assign io_out_difftest_mcause = reg_mcause;	// <stdin>:2374:10, src/main/scala/rv32e/fu/csr.scala:33:28
  assign io_out_difftest_mepc = reg_mepc;	// <stdin>:2374:10, src/main/scala/rv32e/fu/csr.scala:32:28
  assign io_out_difftest_mstatus = reg_mstatus;	// <stdin>:2374:10, src/main/scala/rv32e/fu/csr.scala:34:28
  assign io_out_difftest_mtvec = reg_mtvec;	// <stdin>:2374:10, src/main/scala/rv32e/fu/csr.scala:35:28
endmodule

